import { throwError } from "@jimp/utils";
import { ensureInteger, getAddonReleaseVersion, cppCallbackWrapper, wrapAsync } from "@jimp-native/utils-ts";
var addon = require("../build/".concat(getAddonReleaseVersion(), "/plugin-circle-napi.node"));
var circle = function circle() {
  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var cb = arguments.length > 1 ? arguments[1] : undefined;
  if (typeof options === "function") {
    cb = options;
    options = {};
  }
  var radius = options.radius || Math.min(this.getWidth(), this.getHeight()) / 2;
  var centreX = options.x || this.getWidth() / 2;
  var centreY = options.y || this.getHeight() / 2;
  try {
    addon.circle(this.bitmap.data, this.getWidth(), this.getHeight(), ensureInteger(radius), ensureInteger(centreX), ensureInteger(centreY), cppCallbackWrapper(this, cb));
    return this;
  } catch (err) {
    return throwError.call(this, err, cb);
  }
};
var plugin = function plugin() {
  return {
    circle: circle,
    circleAsync: wrapAsync(circle)
  };
};
export default plugin;
//# sourceMappingURL=index.js.map