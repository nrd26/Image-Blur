{"version":3,"file":"index.js","names":["addon","require","getAddonReleaseVersion","rotate","degrees","resize","cb","undefined","throwError","call","bitmap","width","height","originalImage","constructor","advancedRotate","data","cppCallbackWrapper","originalBitmap","newWidth","newHeight","newBuffer","Buffer","alloc","matrixRotate","radians","Math","PI","cosine","cos","sine","sin","ceil","abs","getWidth","getHeight","newWidthHeight","ensureInteger","max","self","crop","Error","blit","doCrop","err","doRotate","plugin","rotateAsync","wrapAsync"],"sources":["../src/index.ts"],"sourcesContent":["import { throwError } from \"@jimp/utils\";\nimport { Rotate } from \"@jimp/plugin-rotate\";\nimport { ImageCallback } from \"@jimp/core\";\nimport {\n  ensureInteger,\n  getAddonReleaseVersion,\n  cppCallbackWrapper,\n  AsyncPlugin,\n  wrapAsync,\n} from \"@jimp-native/utils-ts\";\nimport Jimp from \"jimp\";\n\nconst addon = require(`../build/${getAddonReleaseVersion()}/plugin-rotate-napi.node`);\n\ntype PluginRotate = AsyncPlugin<Rotate>;\n\nfunction rotate(\n  degrees: number,\n  resize?: boolean | string | ImageCallback<PluginRotate>,\n  cb?: ImageCallback<PluginRotate>\n) {\n  if (typeof resize === \"undefined\" || resize === undefined) {\n    resize = true;\n  }\n\n  if (typeof resize === \"function\" && typeof cb === \"undefined\") {\n    cb = resize;\n    resize = true;\n  }\n\n  if (typeof resize !== \"boolean\" && typeof resize !== \"string\") {\n    return throwError.call(\n      this,\n      \"Resize must be of type Boolean or String\",\n      cb\n    );\n  }\n\n  try {\n    let { width, height } = this.bitmap;\n\n    // Clone the current image data to a new Jimp instance.\n    const originalImage = new this.constructor(0, 0) as Jimp;\n    originalImage.bitmap = { ...this.bitmap };\n\n    // If resize is not permitted, just go straight to advancedRotate in place\n    if (!resize) {\n      addon.advancedRotate(\n        this.bitmap.data,\n        this.bitmap.width,\n        this.bitmap.height,\n        degrees,\n        cppCallbackWrapper(this, cb)\n      );\n\n      return this;\n    }\n\n    // If we can rotate by a multiple of 90 degrees, use a simplified matrix rotation method.\n    if (degrees % 90 === 0) {\n      // Ensure degrees is within a range C++ can work with.\n      degrees %= 360;\n      switch (degrees) {\n        case 0:\n          degrees = 0;\n          break;\n        case 90:\n        case -270:\n          degrees = 90;\n          break;\n        case 180:\n        case -180:\n          degrees = 180;\n          break;\n        default:\n          degrees = 270;\n      }\n\n      if (degrees === 0) {\n        if (cb) {\n          cb.call(this, null, this);\n        }\n\n        return this;\n      }\n\n      const originalBitmap = this.bitmap.data;\n\n      const newWidth = degrees % 180 === 0 ? width : height;\n      const newHeight = degrees % 180 === 0 ? height : width;\n      const newBuffer = Buffer.alloc(newWidth * newHeight * 4);\n\n      this.bitmap.data = newBuffer;\n      this.bitmap.width = newWidth;\n      this.bitmap.height = newHeight;\n\n      addon.matrixRotate(\n        originalBitmap,\n        width,\n        height,\n        newBuffer,\n        newWidth,\n        newHeight,\n        degrees,\n        cppCallbackWrapper(this, cb)\n      );\n\n      return this;\n    }\n\n    /**\n     * No shortcuts left to try, calculate new size in JS, create an image of the right size and pass it onto\n     * advancedRotate\n     */\n    const radians = (degrees * Math.PI) / 180;\n    const cosine = Math.cos(radians);\n    const sine = Math.sin(radians);\n\n    width =\n      Math.ceil(\n        Math.abs(originalImage.getWidth() * cosine) +\n          Math.abs(originalImage.getHeight() * sine)\n      ) + 1;\n    height =\n      Math.ceil(\n        Math.abs(originalImage.getWidth() * sine) +\n          Math.abs(originalImage.getHeight() * cosine)\n      ) + 1;\n\n    if (width % 2 !== 0) {\n      width++;\n    }\n\n    if (height % 2 !== 0) {\n      height++;\n    }\n\n    const newWidthHeight = ensureInteger(\n      Math.max(\n        width,\n        height,\n        originalImage.getWidth(),\n        originalImage.getHeight()\n      )\n    );\n\n    this.bitmap.data = Buffer.alloc(newWidthHeight * newWidthHeight * 4);\n    this.bitmap.width = newWidthHeight;\n    this.bitmap.height = newWidthHeight;\n\n    const self = this as Jimp;\n\n    if (typeof self.crop !== \"function\") {\n      return throwError.call(\n        self,\n        new Error(\n          `A version of plugin-crop must be loaded in order to use resizing with rotate`\n        ),\n        cb\n      );\n    }\n\n    if (typeof self.blit !== \"function\") {\n      return throwError.call(\n        self,\n        new Error(\n          `A version of plugin-blit must be loaded in order to use resizing with rotate`\n        ),\n        cb\n      );\n    }\n\n    if (cb) {\n      // If we're running in async mode then we'll need to chain these properly through callbacks.\n      const doCrop = () => {\n        self.crop(\n          ensureInteger(self.bitmap.width / 2 - width / 2),\n          ensureInteger(self.bitmap.height / 2 - height / 2),\n          width,\n          height,\n          (err) => {\n            if (err) {\n              return throwError.call(self, err, cb);\n            }\n\n            cb.call(self, null, self);\n          }\n        );\n      };\n\n      const doRotate = () => {\n        addon.advancedRotate(\n          self.bitmap.data,\n          self.bitmap.width,\n          self.bitmap.height,\n          degrees,\n          (err) => {\n            if (err) {\n              return throwError.call(self, err, cb);\n            }\n\n            doCrop();\n          }\n        );\n      };\n\n      self.blit(\n        originalImage,\n        ensureInteger(self.bitmap.width / 2 - originalImage.getWidth() / 2),\n        ensureInteger(self.bitmap.height / 2 - originalImage.getHeight() / 2),\n        0,\n        0,\n        originalImage.getWidth(),\n        originalImage.getHeight(),\n        (err) => {\n          if (err) {\n            return throwError.call(self, err, cb);\n          }\n\n          doRotate();\n        }\n      );\n    } else {\n      self.blit(\n        originalImage,\n        ensureInteger(self.bitmap.width / 2 - originalImage.getWidth() / 2),\n        ensureInteger(self.bitmap.height / 2 - originalImage.getHeight() / 2),\n        0,\n        0,\n        originalImage.getWidth(),\n        originalImage.getHeight()\n      );\n\n      addon.advancedRotate(\n        self.bitmap.data,\n        self.bitmap.width,\n        self.bitmap.height,\n        degrees\n      );\n\n      self.crop(\n        ensureInteger(this.bitmap.width / 2 - width / 2),\n        ensureInteger(this.bitmap.height / 2 - height / 2),\n        width,\n        height\n      );\n    }\n  } catch (err) {\n    return throwError.call(this, err, cb);\n  }\n}\n\nconst plugin: () => PluginRotate = () => ({\n  rotate,\n  rotateAsync: wrapAsync(rotate),\n});\n\nexport default plugin;\n"],"mappings":"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"}