"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _utils = require("@jimp/utils");
var _utilsTs = require("@jimp-native/utils-ts");
var addon = require("../build/".concat((0, _utilsTs.getAddonReleaseVersion)(), "/plugin-blit-napi.node"));
var blit = function blit(sourceImage, xOffset, yOffset, sourceX, sourceY, sourceW, sourceH, cb) {
  if (!(sourceImage instanceof this.constructor)) {
    return _utils.throwError.call(this, "sourceImage must be a Jimp image");
  }
  if (typeof sourceX === "function") {
    cb = sourceX;
    sourceX = 0;
  }
  sourceX = sourceX || 0;
  sourceY = sourceY || 0;
  sourceW = sourceW || sourceImage.getWidth();
  sourceH = sourceH || sourceImage.getHeight();
  try {
    addon.blit(sourceImage.bitmap.data, sourceImage.getWidth(), sourceImage.getHeight(), this.bitmap.data, this.getWidth(), this.getHeight(), (0, _utilsTs.ensureInteger)(xOffset), (0, _utilsTs.ensureInteger)(yOffset), (0, _utilsTs.ensureInteger)(sourceX), (0, _utilsTs.ensureInteger)(sourceY), (0, _utilsTs.ensureInteger)(sourceW), (0, _utilsTs.ensureInteger)(sourceH), (0, _utilsTs.cppCallbackWrapper)(this, cb));
    return this;
  } catch (err) {
    return _utils.throwError.call(this, err, cb);
  }
};
var plugin = function plugin() {
  return {
    blit: blit,
    blitAsync: (0, _utilsTs.wrapAsync)(blit)
  };
};
var _default = plugin;
exports["default"] = _default;
module.exports = exports.default;
//# sourceMappingURL=index.js.map