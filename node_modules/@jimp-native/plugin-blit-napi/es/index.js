import { throwError } from "@jimp/utils";
import { ensureInteger, getAddonReleaseVersion, cppCallbackWrapper, wrapAsync } from "@jimp-native/utils-ts";
var addon = require("../build/".concat(getAddonReleaseVersion(), "/plugin-blit-napi.node"));
var blit = function blit(sourceImage, xOffset, yOffset, sourceX, sourceY, sourceW, sourceH, cb) {
  if (!(sourceImage instanceof this.constructor)) {
    return throwError.call(this, "sourceImage must be a Jimp image");
  }
  if (typeof sourceX === "function") {
    cb = sourceX;
    sourceX = 0;
  }
  sourceX = sourceX || 0;
  sourceY = sourceY || 0;
  sourceW = sourceW || sourceImage.getWidth();
  sourceH = sourceH || sourceImage.getHeight();
  try {
    addon.blit(sourceImage.bitmap.data, sourceImage.getWidth(), sourceImage.getHeight(), this.bitmap.data, this.getWidth(), this.getHeight(), ensureInteger(xOffset), ensureInteger(yOffset), ensureInteger(sourceX), ensureInteger(sourceY), ensureInteger(sourceW), ensureInteger(sourceH), cppCallbackWrapper(this, cb));
    return this;
  } catch (err) {
    return throwError.call(this, err, cb);
  }
};
var plugin = function plugin() {
  return {
    blit: blit,
    blitAsync: wrapAsync(blit)
  };
};
export default plugin;
//# sourceMappingURL=index.js.map