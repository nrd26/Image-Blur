{"version":3,"file":"index.js","names":["addon","require","getAddonReleaseVersion","RESIZE_METHOD_MAP","nearestNeighbor","nearestNeighbour","bilinearInterpolation","bicubicInterpolation","hermiteInterpolation","bezierInterpolation","defaultInterpolation","resize","width","height","mode","cb","constructor","AUTO","bitmap","throwError","call","modeNumber","ensureInteger","targetBitmapData","Buffer","alloc","originalBitmap","data","originalWidth","originalHeight","cppCallbackWrapper","err","plugin","constants","RESIZE_NEAREST_NEIGHBOR","RESIZE_BILINEAR","RESIZE_BICUBIC","RESIZE_HERMITE","RESIZE_BEZIER","resizeAsync","wrapAsync"],"sources":["../src/index.ts"],"sourcesContent":["import { throwError } from \"@jimp/utils\";\nimport { Resize } from \"@jimp/plugin-resize\";\nimport { ImageCallback } from \"@jimp/core\";\nimport {\n  ensureInteger,\n  getAddonReleaseVersion,\n  cppCallbackWrapper,\n  AsyncPlugin,\n  wrapAsync,\n} from \"@jimp-native/utils-ts\";\n\nconst addon = require(`../build/${getAddonReleaseVersion()}/plugin-resize-napi.node`);\n\ntype PluginResize = AsyncPlugin<Resize[\"class\"]>;\n\nconst RESIZE_METHOD_MAP = {\n  nearestNeighbor: 0,\n  nearestNeighbour: 0,\n  bilinearInterpolation: 1,\n  bicubicInterpolation: 2,\n  hermiteInterpolation: 3,\n  bezierInterpolation: 4,\n  defaultInterpolation: 99,\n} as const;\n\ntype ResizeMethod = keyof typeof RESIZE_METHOD_MAP;\n\nfunction resize(\n  width: number,\n  height: number,\n  mode:\n    | ResizeMethod\n    | string\n    | ImageCallback<PluginResize> = \"defaultInterpolation\",\n  cb?: ImageCallback<PluginResize>\n) {\n  if (typeof mode === \"function\" && typeof cb === \"undefined\") {\n    cb = mode;\n    mode = \"defaultInterpolation\";\n  }\n\n  if (width === this.constructor.AUTO) {\n    width = this.bitmap.width * (height / this.bitmap.height);\n  }\n\n  if (height === this.constructor.AUTO) {\n    height = this.bitmap.height * (width / this.bitmap.width);\n  }\n\n  if (width <= 0) {\n    return throwError.call(this, \"Width must be greater than zero\", cb);\n  }\n\n  if (height <= 0) {\n    return throwError.call(this, \"Height must be greater than zero\", cb);\n  }\n\n  let modeNumber = RESIZE_METHOD_MAP[mode as string];\n\n  if (typeof modeNumber !== \"number\") {\n    modeNumber = 99;\n  }\n\n  width = ensureInteger(width);\n  height = ensureInteger(height);\n  const targetBitmapData = Buffer.alloc(width * height * 4);\n\n  try {\n    const originalBitmap = this.bitmap.data;\n    const originalWidth = this.bitmap.width;\n    const originalHeight = this.bitmap.height;\n\n    this.bitmap.data = targetBitmapData;\n    this.bitmap.width = width;\n    this.bitmap.height = height;\n\n    addon.resize(\n      originalBitmap,\n      originalWidth,\n      originalHeight,\n      targetBitmapData,\n      width,\n      height,\n      modeNumber,\n      cppCallbackWrapper(this, cb)\n    );\n\n    return this;\n  } catch (err) {\n    return throwError.call(this, err, cb);\n  }\n}\n\nconst plugin: () => {\n  constants: Resize[\"constants\"];\n  class: PluginResize;\n} = () => ({\n  constants: {\n    RESIZE_NEAREST_NEIGHBOR: \"nearestNeighbor\",\n    RESIZE_BILINEAR: \"bilinearInterpolation\",\n    RESIZE_BICUBIC: \"bicubicInterpolation\",\n    RESIZE_HERMITE: \"hermiteInterpolation\",\n    RESIZE_BEZIER: \"bezierInterpolation\",\n  },\n  class: {\n    resize,\n    resizeAsync: wrapAsync(resize),\n  },\n});\n\nexport default plugin;\n"],"mappings":"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"}