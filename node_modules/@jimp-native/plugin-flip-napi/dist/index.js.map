{"version":3,"file":"index.js","names":["addon","require","getAddonReleaseVersion","flip","horizontally","vertically","cb","bitmap","data","getWidth","getHeight","cppCallbackWrapper","err","throwError","call","plugin","flipAsync","wrapAsync","mirror","mirrorAsync"],"sources":["../src/index.ts"],"sourcesContent":["import { throwError } from \"@jimp/utils\";\nimport { Flip } from \"@jimp/plugin-flip\";\nimport { ImageCallback } from \"@jimp/core\";\nimport {\n  ensureInteger,\n  getAddonReleaseVersion,\n  cppCallbackWrapper,\n  AsyncPlugin,\n  wrapAsync,\n} from \"@jimp-native/utils-ts\";\n\nconst addon = require(`../build/${getAddonReleaseVersion()}/plugin-flip-napi.node`);\n\nfunction flip(\n  horizontally = true,\n  vertically = false,\n  cb?: ImageCallback<AsyncPlugin<Flip>>\n) {\n  try {\n    if (horizontally || vertically) {\n      addon.flip(\n        this.bitmap.data,\n        this.getWidth(),\n        this.getHeight(),\n        horizontally,\n        vertically,\n        cppCallbackWrapper(this, cb)\n      );\n    }\n\n    return this;\n  } catch (err) {\n    return throwError.call(this, err, cb);\n  }\n}\n\nconst plugin: () => AsyncPlugin<Flip> = () => ({\n  flip,\n  flipAsync: wrapAsync(flip),\n  mirror: flip,\n  mirrorAsync: wrapAsync(flip),\n});\n\nexport default plugin;\n"],"mappings":";;;;;;AAAA;AAGA;AAQA,IAAMA,KAAK,GAAGC,OAAO,oBAAa,IAAAC,+BAAsB,GAAE,4BAAyB;AAEnF,SAASC,IAAI,GAIX;EAAA,IAHAC,YAAY,uEAAG,IAAI;EAAA,IACnBC,UAAU,uEAAG,KAAK;EAAA,IAClBC,EAAqC;EAErC,IAAI;IACF,IAAIF,YAAY,IAAIC,UAAU,EAAE;MAC9BL,KAAK,CAACG,IAAI,CACR,IAAI,CAACI,MAAM,CAACC,IAAI,EAChB,IAAI,CAACC,QAAQ,EAAE,EACf,IAAI,CAACC,SAAS,EAAE,EAChBN,YAAY,EACZC,UAAU,EACV,IAAAM,2BAAkB,EAAC,IAAI,EAAEL,EAAE,CAAC,CAC7B;IACH;IAEA,OAAO,IAAI;EACb,CAAC,CAAC,OAAOM,GAAG,EAAE;IACZ,OAAOC,iBAAU,CAACC,IAAI,CAAC,IAAI,EAAEF,GAAG,EAAEN,EAAE,CAAC;EACvC;AACF;AAEA,IAAMS,MAA+B,GAAG,SAAlCA,MAA+B;EAAA,OAAU;IAC7CZ,IAAI,EAAJA,IAAI;IACJa,SAAS,EAAE,IAAAC,kBAAS,EAACd,IAAI,CAAC;IAC1Be,MAAM,EAAEf,IAAI;IACZgB,WAAW,EAAE,IAAAF,kBAAS,EAACd,IAAI;EAC7B,CAAC;AAAA,CAAC;AAAC,eAEYY,MAAM;AAAA;AAAA"}